import React, { useEffect, useState, useCallback } from 'react';

const RecipeIngredients = ({ recipeId, isAuthor }) => {
    const [ingredients, setIngredients] = useState([]);
    const [name, setName] = useState('');
    const [quantity, setQuantity] = useState('');
    const [unit, setUnit] = useState('');
    const [error, setError] = useState('');

    // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± ‚Äî useCallback
    const fetchIngredients = useCallback(() => {
        const token = localStorage.getItem('accessToken');
        fetch(`https://erko123.pythonanywhere.com/api/v1/recipes/${recipeId}/ingredients/`, {
            headers: {
                Authorization: `Bearer ${token}`,
            }
        })
            .then(res => res.json())
            .then(data => setIngredients(data))
            .catch(() => setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'));
    }, [recipeId]);

    // ‚úÖ useEffect —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é
    useEffect(() => {
        fetchIngredients();
    }, [fetchIngredients]);

    const handleAdd = async (e) => {
        e.preventDefault();
        setError('');
        const token = localStorage.getItem('accessToken');
        if (!token) return alert('–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã');

        const res = await fetch(`https://erko123.pythonanywhere.com/api/v1/recipes/${recipeId}/ingredients/`, {
            method: 'POST',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, quantity: parseFloat(quantity), unit })
        });

        if (!res.ok) {
            const data = await res.json();
            const msg = typeof data === 'object' ? Object.values(data).flat().join(' ') : '–û—à–∏–±–∫–∞';
            return setError(msg);
        }

        setName('');
        setQuantity('');
        setUnit('');
        fetchIngredients(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
    };

    const handleDelete = async (id) => {
        const token = localStorage.getItem('accessToken');
        if (!token) return;

        const confirmed = window.confirm('–£–¥–∞–ª–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç?');
        if (!confirmed) return;

        const res = await fetch(`https://erko123.pythonanywhere.com/api/v1/recipes/${recipeId}/ingredients/${id}/`, {
            method: 'DELETE',
            headers: { Authorization: `Bearer ${token}` }
        });

        if (res.ok) {
            fetchIngredients(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
        } else {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
        }
    };

    return (
        <div className="mt-4">
            <h4 className="font-semibold mb-2">üßÇ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h4>

            {ingredients.length === 0 && <p className="text-sm text-gray-500">–ù–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤</p>}
            <ul className="list-disc ml-6 space-y-1">
                {ingredients.map(ing => (
                    <li key={ing.id} className="flex justify-between items-center">
                        {ing.ingredient.name} ‚Äî {ing.quantity} {ing.unit}
                        {isAuthor && (
                            <button
                                onClick={() => handleDelete(ing.id)}
                                className="text-red-500 text-sm ml-2 hover:underline"
                            >
                                –£–¥–∞–ª–∏—Ç—å
                            </button>
                        )}
                    </li>
                ))}
            </ul>

            {isAuthor && (
                <form onSubmit={handleAdd} className="mt-4 space-y-2">
                    <div className="flex space-x-2">
                        <input
                            type="text"
                            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                            className="border p-2 w-1/3 rounded"
                            required
                        />
                        <input
                            type="number"
                            placeholder="–ö–æ–ª-–≤–æ"
                            value={quantity}
                            onChange={(e) => setQuantity(e.target.value)}
                            className="border p-2 w-1/3 rounded"
                            required
                        />
                        <input
                            type="text"
                            placeholder="–ï–¥. –∏–∑–º."
                            value={unit}
                            onChange={(e) => setUnit(e.target.value)}
                            className="border p-2 w-1/3 rounded"
                            required
                        />
                    </div>
                    <button
                        type="submit"
                        className="bg-green-500 text-white px-4 py-1 rounded hover:bg-green-600"
                    >
                        –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç
                    </button>
                    {error && <p className="text-red-500 text-sm">{error}</p>}
                </form>
            )}
        </div>
    );
};

export default RecipeIngredients;
